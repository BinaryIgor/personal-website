server {
    listen 80;
    listen [::]:80;
    server_name  igor.roztropinski.com www.igor.roztropinski.com;

    return 301 https://${server_name}$request_uri;
}

server {
    listen 443 ssl http2;
    listen  [::]:443 ssl http2;
    server_name  igor.roztropinski.com www.igor.roztropinski.com;

    #access_log  /var/log/nginx/host.access.log  main;

    root   /usr/share/nginx/html;
    index  index.html index.htm;

    ssl_certificate /etc/ssl/certs/selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/selfsigned.key;

    gzip on;
    gzip_types      text/plain text/css application/javascript;
    gzip_min_length 1000;

    location ~* \.(html)$ {
        etag on;
        add_header Cache-Control "no-cache";
    }

    location ~* \.(js|css|jpg|jpeg|png|gif|js|css)$ {
        expires 1y;
        etag off;
        if_modified_since off;
        add_header Cache-Control "public, no-transform";
    }

    location ~* \.(ico)$ {
        expires 1d;
        etag off;
        if_modified_since off;
        add_header Cache-Control "public, no-transform";
    }

    error_page  404  =200 /index.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
